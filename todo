28.01.2020:

Pawel:
- Icons in den Ibranch korrekt einbauen und ggf. färben
- Update Icon
- Spinne verkleinern
- Akku nicht färben
- Kommentare Original Code anschauen

Alex:
- gleicher Prefix gleiche Situationen  (OuterScope übergreifend)


Alle:
- proof reading (aus Benutzersicht)
- Aus Palette Events sofort mit Icons versehen (auch beim rausziehen Icon sichtbar)
- Token Simulation für den jetzigen Use Case (derzeit in Branch tokensimu)
- Token-logik für Innerscope mit höchster Priorität bzw. welche Violation verletzt wird
- [Info] Aktuelle Logik: OuterScope wählt ersten (0) InnerScope. Wenn SituationEvent auslöst, wird nächster (1) InnerScope gewählt.
- [Info] Token-Simulator: Bei mehrmaligen durchläufen mit BoundaryEvents bleiben ProcessInstanzen offen. 
                Scheinbar muss man nach einem erfolgreichen Durchlauf reseten.
- [BUG] Token-Simulator: BoundaryEvents haben am InnerScope nicht direkt das ContextPad.
        Context-Pad erscheint nur durch auswählen der ProcessID (z.B. oben auf ID 2 klicken)
- (OPTIONAL) Die Icons mit den ganzen Logik und so da rein
- (OPTIONAL) Beim ziehen von Symbolen die Darstellung anpassen (z.B. Situationevents innerer Kreis links verschoben) 
- (OPTIONAL) Token Simu Messageflows implementieren (nur wenn der Rest wirklich ok ist) SONST einfach nur "ignore"


[TokenSimulator] - Erledigt:
- SituationEvents können Tokens auslösen
- Wenn SituationEvent Token auslöst, werden alle anderen Tokens im InnerScope beendet
- OuterScope hat eigene ProcessInstanceId
- OuterScope wird durch das EndEvent im InnerScope mit beendet.





Erledigt:
- Spinne, Akku, Kamera, Update, Mensch Icons hinzufügen
- Palette farbe fixen (2 sind schwarz) -> jetzt grün/gelb/rot
- fetter Scope Messageflow verbieten
- Scope 100 zu Task in anderen Pool verbiete
- Prioritätsfeld von Scope
- Checkbox compensate
- Situationscope nicht sich selbst überprüfen
- gleiche Scopes verhindern
- Validieren von Eingaben, wenn Akku (grün) violation auf 2 gesetzt wird, aber
bei Scope 2 Akku grün ist
- violation id nur auf existierende scope id verweisen
- violation refrenziert auf Subprocess Prefix, deshalb scope Attribut nicht mehr nötig
- Wenn rot auf 2 zeigt aber in gelb gesetzt
- scope-Attribut entfernen
- Participant Attribut
- übersetzen ins Englische (kompletter Code)
- BPMNRenderer Zeile 1599 innerer Kreis stroke: none
- Einbinden der Icons
- Farbe zu den Icons ergänzen 
- default Symbole wieder erlauben (da die neuen Icons derzeit die alten Symbole überschreiben)


14.01.2020:
- Icons auf Kreise legen 

Erledigt:
- Priorität validieren
- expand 200 bei ContextPad
- Inputfeld & Button entfernen
- fix validate violation
- violation mit Zahl beginnen und dann Buchstabe erlauben
- derzeit werden ungültige violation Werte zum Beispiel (ab) ins xml übernommen..
- Diagramm machen
- ContextPad Schlüssel entfernen (wenn Icons auf Kreisen funktionieren)
- ID Feld zu Subprozessen
- Objekte richtig darstellen (Kreise rot, gelb & grün) 
- SituationEvents (Kreise) dürfen nicht in Rect 100 reingezogen werden
- Rect mit Score 100 hat die grünen/gelben/roten Kreise (evtl 1 oder mehrere, noch unsicher) drangeklebt  
- SituationEvents sind nun am Rand des Scopes beweggbar 



19.12.2019
To do:
   CustomRules:
   - SituationEvents (Kreise) dürfen nicht in Rect 100 reingezogen werden
   // möglicher fix via 'attach' in canMove funktion, jedoch ist es dann überall innerhalb erzeugbar
   // evtl. mit so ner art snap-funktion automatisch an border heften (irgendwo gibts sowas schon)
   // muss aufjedenfall möglich sein, weil bei normalen Tasks ist es auch so nur attach, aber nicht innerhalb
   - Rect mit Score 100 hat die grünen/gelben/roten Kreise (evtl 1 oder mehrere, noch unsicher) drangeklebt (*) 

   Renderer:
   - Objekte richtig darstellen (Kreise rot, gelb & grün) 
   - Icons auf Kreise legen (!!!!!)

   SituationProperties:
   - validate von neuen Textfeldern
   - vielleicht Möglichkeit zum Bearbeiten der Label
   - Array aus Variablen für validate Funktion
   - derzeit werden ungültige violation Werte zum Beispiel (ab) ins xml übernommen..
   
   IdProps:
   - ID Feld zu Subprozessen
   
   - Je ein Kreis pro Icon für Violation (gekoppelt an (*))

(!!!!!) Anderer Ansatz im Branch target umgesetzt

Done:
- ContextPad verändern:
   - Red, green, yellow: löschen, Schraubenschlüssel
   - Großes Rechteckt (Score 100?): Subprozesse, Löschen, Arrows
- Subprozesse größer machen
- erstes Drankleben aus der Palette von Situationskreisen an normale Rects (Task, Subprozesse ohne Score) verboten
- Kreise nicht verbinden
- keine Verbindungen von Kreisen zu anderen Objekten
- keine Verbinungen von Rect 100 (nur zu Kreisen)
- keine Verbindungen zu Rect 100
- Verbindungen zu Rect Score 100 verbieten
- Kreise dürfen nicht frei im Feld sein, müssen drangeklebt sein
- keine Kreise an Rect Score = 200 erlaubt (bei Palette)
- Rect mit Score 200 enthält nur Rect mit Score 100
- dynamisches Erweitern des Menüs
- Properties Panel ID violation pro Icon
- Rect 100 kann innerhalb Rect 200 frei bewegt werden
- Alle (normalen) Events können innerhalb des Rects 100 bewegt werden
- Normale Events können an Task Border gehängt werden
- 100 nicht in normalen Subprozessen erlaubt
- 200 enthält keine Subprozesse
-(Bilder im PropertiesPanel)
- Rechtecke richtig rendern
- damit Situation nicht in grün und gelb (etc) gesetzt werden können

Timm & Lavi:
- CustomContextPad Element spezifisch machen (heute besprechen)

Alex & Marvin:
Kreise:
- nur noch an Rechtecke kleben erlaubt
Rechteck:
- Kreise nur noch erlauben

Pawel:
- auf die Kreise Icons legen
- Menu Provider dementsprechend anpassen

Features:
- Absturzursache behoben
- Hover-Effekt bei der Palette 
- ENTF-Taste (Probleme in versch. Browsern)
- zweiten Container entfernen
- Kreise in verschiedenen Farben
- Rechteck 
- Properties Panel
- Download Button
- Situation Tab
- Validate Funktion für IntegerWerte (violation, priority)
- Kreise drankleben
- README aktualisieren bzw. anpassen
- XML-Kompatibilität:
   - Kreise zu Intermediate Event
   - Rechteck zu Subprocess/Group

-
